/* 
   This project... WRITE PROJECT DESCRIPTION HERE
   Author: Kevin Chacko
   Last Updated: WRITE END DATE HERE
   Period 6, C++ / Data Structures
*/

/*
  I got some of help with learning what's needed for a Shunting Yard
  and how it's parts work individually and together from the "Stacks, 
  Queues, Lists" module. This gave me some resources to refer to for 
  help, teaching me about the whole Shunting Yard Algorithm, Stacks, 
  Queues, the Binary Expression tree, and giving worked examples of 
  the process a Shunting Yard Algorithm will work through.

  I learned much more about what a Shunting Yard Algorithm and a 
  Binary Expression Tree is from the Wikipedia pages on them.
  URL: https://en.wikipedia.org/wiki/Binary_tree
  URL: https://en.wikipedia.org/wiki/Heap_(data_structure)
  These pages gave me an overview on how my binary search tree works 
  and what their benefits are.

  WRITE MORE CITATIONS HERE
*/

//imports
#include <iostream>
#include <cstring>
#include <cctype>
#include <ios>
#include <limits>
#include <math.h>
#include <cstdlib>
#include <fstream>

using namespace std;

//Constant global variable declarations
const int emptyNode = -1;

//Function prototypes
void instructions();
int askCommand();
void addNodesManually(int* tree, int & lastI);
void addNodesByFile(int* tree, int & lastI);
void addNode(int input, int* tree, int & lastI);
void removeNode(int* tree, int & lastI);
void removeAll(int* tree, int & lastI);
void printTree(int* tree, int nodeI, int steps);

//Start of main function
int main() {
